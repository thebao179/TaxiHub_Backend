// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TripService.Repositories;

#nullable disable

namespace TripService.Migrations
{
    [DbContext(typeof(TripDbContext))]
    [Migration("20230423165317_initialdb2")]
    partial class initialdb2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TripService.Models.Trip", b =>
                {
                    b.Property<Guid>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CompleteTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Destination")
                        .HasColumnType("text");

                    b.Property<double?>("Distance")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("DriverId")
                        .HasColumnType("uuid");

                    b.Property<double?>("LatDesAddr")
                        .HasColumnType("double precision");

                    b.Property<double?>("LatStartAddr")
                        .HasColumnType("double precision");

                    b.Property<double?>("LongDesAddr")
                        .HasColumnType("double precision");

                    b.Property<double?>("LongStartAddr")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("PassengerId")
                        .HasColumnType("uuid");

                    b.Property<string>("PassengerPhone")
                        .HasColumnType("text");

                    b.Property<int?>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("StaffId")
                        .HasColumnType("uuid");

                    b.Property<string>("StartAddress")
                        .HasColumnType("text");

                    b.Property<int?>("TimeSecond")
                        .HasColumnType("integer");

                    b.Property<string>("TripStatus")
                        .HasColumnType("text");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uuid");

                    b.Property<string>("VehicleType")
                        .HasColumnType("text");

                    b.HasKey("TripId");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("TripService.Models.TripFeedback", b =>
                {
                    b.Property<Guid>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<double?>("Rate")
                        .HasColumnType("double precision");

                    b.HasKey("TripId");

                    b.ToTable("TripFeedback");
                });

            modelBuilder.Entity("TripService.Models.TripRequest", b =>
                {
                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Destination")
                        .HasColumnType("text");

                    b.Property<double?>("Distance")
                        .HasColumnType("double precision");

                    b.Property<double?>("LatDesAddr")
                        .HasColumnType("double precision");

                    b.Property<double?>("LatStartAddr")
                        .HasColumnType("double precision");

                    b.Property<double?>("LongDesAddr")
                        .HasColumnType("double precision");

                    b.Property<double?>("LongStartAddr")
                        .HasColumnType("double precision");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uuid");

                    b.Property<string>("PassengerNote")
                        .HasColumnType("text");

                    b.Property<string>("PassengerPhone")
                        .HasColumnType("text");

                    b.Property<int?>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("text");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uuid");

                    b.Property<string>("StartAddress")
                        .HasColumnType("text");

                    b.Property<string>("VehicleType")
                        .HasColumnType("text");

                    b.HasKey("RequestId");

                    b.ToTable("TripRequest");
                });
#pragma warning restore 612, 618
        }
    }
}
